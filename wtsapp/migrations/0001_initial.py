# Generated by Django 2.2.17 on 2020-12-30 15:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import v1.models_helper.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('modify_at', models.DateTimeField(auto_now=True)),
                ('phone', models.CharField(db_index=True, default=None, max_length=11, null=True)),
                ('status', models.IntegerField(choices=[(1, '启用'), (0, '禁用')], default=v1.models_helper.enums.StatusEnum(1), verbose_name='状态')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('modify_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='角色名，最多64个字符', max_length=64, verbose_name='角色名')),
                ('status', models.IntegerField(choices=[(1, '启用'), (0, '禁用')], default=v1.models_helper.enums.StatusEnum(1), verbose_name='状态')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TaskPro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('modify_at', models.DateTimeField(auto_now=True)),
                ('task_name', models.CharField(help_text='任务，最多64个字符', max_length=64, verbose_name='任务名')),
                ('start_at', models.DateTimeField(default=None, help_text='任务开始时间', null=True, verbose_name='任务开始时间')),
                ('end_at', models.DateTimeField(default=None, help_text='任务终止时间', null=True, verbose_name='任务终止时间')),
                ('task_status', models.IntegerField(choices=[(0, '未开始'), (1, '进行中'), (2, '已完成'), (3, '已取消'), (4, '已关闭')], default=v1.models_helper.enums.TStatusEnum(0), verbose_name='任务状态')),
                ('parent', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='wtsapp.TaskPro')),
                ('user', models.ForeignKey(db_column='user_id', help_text='用户', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='用户')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Working',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('modify_at', models.DateTimeField(auto_now=True)),
                ('work_start', models.DateTimeField(default=None, help_text='工时开始日期', null=True, verbose_name='工时开始日期')),
                ('work_end', models.DateTimeField(default=None, help_text='工时终止日期', null=True, verbose_name='工时终止日期')),
                ('approve_status', models.IntegerField(choices=[(0, '待审批'), (1, '已审批'), (2, '未通过')], default=v1.models_helper.enums.WStatusEnum(0), verbose_name='审批状态')),
                ('approve_time', models.DateTimeField(help_text='审批通过时间')),
                ('fail_reasons', models.CharField(blank=True, default='', help_text='未通过原因', max_length=32, null=True)),
                ('work_info', models.CharField(blank=True, default='', help_text='工时内容', max_length=1024, null=True)),
                ('work_time', models.CharField(blank=True, default='0', help_text='工作时长', max_length=32, null=True)),
                ('taskpro', models.ForeignKey(help_text='任务', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='works', to='wtsapp.TaskPro', verbose_name='任务')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='OpetationLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('modify_at', models.DateTimeField(auto_now=True)),
                ('module', models.CharField(help_text='功能模块', max_length=32, verbose_name='功能模块')),
                ('operation', models.CharField(help_text='操作内容', max_length=32, verbose_name='操作内容')),
                ('operator', models.ForeignKey(help_text='操作人', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='操作人')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='user',
            name='role',
            field=models.ForeignKey(db_column='role_id', default=None, help_text='角色', null=True, on_delete=django.db.models.deletion.CASCADE, to='wtsapp.Role', verbose_name='角色'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
